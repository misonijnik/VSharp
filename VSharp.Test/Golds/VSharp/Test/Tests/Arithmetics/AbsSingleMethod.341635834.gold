METHOD: System.Single VSharp.Test.Tests.Arithmetics.AbsSingleMethod()
RESULT: 5.9
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1.1 ==> [| 0 ~> System.Empty; 1 ~> System.Object; 2 ~> System.DBNull; 3 ~> System.Boolean; 4 ~> System.Char; 5 ~> System.SByte; 6 ~> System.Byte; 7 ~> System.Int16; 8 ~> System.UInt16; 9 ~> System.Int32; 10 ~> System.UInt32; 11 ~> System.Int64; 12 ~> System.UInt64; 13 ~> System.Single; 14 ~> System.Double; 15 ~> System.Decimal; 16 ~> System.DateTime; 17 ~> System.Object; 18 ~> System.String ... 19 ... |]
1.2.1.1.1 ==> [|... 0 ... |]
1.2.2.1 ==> System.Reflection.Missing CLASS []
1.2.3 ==> <Lambda Expression System.Reflection.MemberFilter>
1.2.4.1 ==> System.Type+<>c CLASS []
1.2.5 ==> <Lambda Expression System.Reflection.MemberFilter>
1.2.6 ==> <Lambda Expression System.Reflection.MemberFilter>
1.3 ==> [| 0 ~> 'A'; 1 ~> 'B'; 2 ~> 'C'; 3 ~> 'D'; 4 ~> 'E'; 5 ~> 'F'; 6 ~> 'G'; 7 ~> 'H'; 8 ~> 'I'; 9 ~> 'J'; 10 ~> 'K'; 11 ~> 'L'; 12 ~> 'M'; 13 ~> 'N'; 14 ~> 'O'; 15 ~> 'P'; 16 ~> 'Q'; 17 ~> 'R'; 18 ~> 'S'; 19 ~> 'T'; 20 ~> 'U'; 21 ~> 'V'; 22 ~> 'W'; 23 ~> 'X'; 24 ~> 'Y'; 25 ~> 'Z'; 26 ~> 'a'; 27 ~> 'b'; 28 ~> 'c'; 29 ~> 'd'; 30 ~> 'e'; 31 ~> 'f'; 32 ~> 'g'; 33 ~> 'h'; 34 ~> 'i'; 35 ~> 'j'; 36 ~> 'k'; 37 ~> 'l'; 38 ~> 'm'; 39 ~> 'n'; 40 ~> 'o'; 41 ~> 'p'; 42 ~> 'q'; 43 ~> 'r'; 44 ~> 's'; 45 ~> 't'; 46 ~> 'u'; 47 ~> 'v'; 48 ~> 'w'; 49 ~> 'x'; 50 ~> 'y'; 51 ~> 'z'; 52 ~> '0'; 53 ~> '1'; 54 ~> '2'; 55 ~> '3'; 56 ~> '4'; 57 ~> '5'; 58 ~> '6'; 59 ~> '7'; 60 ~> '8'; 61 ~> '9'; 62 ~> '+'; 63 ~> '/'; 64 ~> '=' ... 65 ... |]
1.4.1 ==> System.DBNull CLASS []
1.5 ==> [| 0 ~> -1; 1 ~> -1; 2 ~> -1; 3 ~> -1; 4 ~> -1; 5 ~> -1; 6 ~> -1; 7 ~> -1; 8 ~> -1; 9 ~> -1; 10 ~> -1; 11 ~> -1; 12 ~> -1; 13 ~> -1; 14 ~> -1; 15 ~> -1; 16 ~> -1; 17 ~> -1; 18 ~> -1; 19 ~> -1; 20 ~> -1; 21 ~> -1; 22 ~> -1; 23 ~> -1; 24 ~> -1; 25 ~> -1; 26 ~> -1; 27 ~> -1; 28 ~> -1; 29 ~> -1; 30 ~> -1; 31 ~> -1; 32 ~> -1; 33 ~> -1; 34 ~> -1; 35 ~> -1; 36 ~> -1; 37 ~> -1; 38 ~> -1; 39 ~> -1; 40 ~> -1; 41 ~> -1; 42 ~> -1; 43 ~> 62; 44 ~> -1; 45 ~> -1; 46 ~> -1; 47 ~> 63; 48 ~> 52; 49 ~> 53; 50 ~> 54; 51 ~> 55; 52 ~> 56; 53 ~> 57; 54 ~> 58; 55 ~> 59; 56 ~> 60; 57 ~> 61; 58 ~> -1; 59 ~> -1; 60 ~> -1; 61 ~> -1; 62 ~> -1; 63 ~> -1; 64 ~> -1; 65 ~> 0; 66 ~> 1; 67 ~> 2; 68 ~> 3; 69 ~> 4; 70 ~> 5; 71 ~> 6; 72 ~> 7; 73 ~> 8; 74 ~> 9; 75 ~> 10; 76 ~> 11; 77 ~> 12; 78 ~> 13; 79 ~> 14; 80 ~> 15; 81 ~> 16; 82 ~> 17; 83 ~> 18; 84 ~> 19; 85 ~> 20; 86 ~> 21; 87 ~> 22; 88 ~> 23; 89 ~> 24; 90 ~> 25; 91 ~> -1; 92 ~> -1; 93 ~> -1; 94 ~> -1; 95 ~> -1; 96 ~> -1; 97 ~> 26; 98 ~> 27; 99 ~> 28; 100 ~> 29; 101 ~> 30; 102 ~> 31; 103 ~> 32; 104 ~> 33; 105 ~> 34; 106 ~> 35; 107 ~> 36; 108 ~> 37; 109 ~> 38; 110 ~> 39; 111 ~> 40; 112 ~> 41; 113 ~> 42; 114 ~> 43; 115 ~> 44; 116 ~> 45; 117 ~> 46; 118 ~> 47; 119 ~> 48; 120 ~> 49; 121 ~> 50; 122 ~> 51; 123 ~> -1; 124 ~> -1; 125 ~> -1; 126 ~> -1; 127 ~> -1; 128 ~> -1; 129 ~> -1; 130 ~> -1; 131 ~> -1; 132 ~> -1; 133 ~> -1; 134 ~> -1; 135 ~> -1; 136 ~> -1; 137 ~> -1; 138 ~> -1; 139 ~> -1; 140 ~> -1; 141 ~> -1; 142 ~> -1; 143 ~> -1; 144 ~> -1; 145 ~> -1; 146 ~> -1; 147 ~> -1; 148 ~> -1; 149 ~> -1; 150 ~> -1; 151 ~> -1; 152 ~> -1; 153 ~> -1; 154 ~> -1; 155 ~> -1; 156 ~> -1; 157 ~> -1; 158 ~> -1; 159 ~> -1; 160 ~> -1; 161 ~> -1; 162 ~> -1; 163 ~> -1; 164 ~> -1; 165 ~> -1; 166 ~> -1; 167 ~> -1; 168 ~> -1; 169 ~> -1; 170 ~> -1; 171 ~> -1; 172 ~> -1; 173 ~> -1; 174 ~> -1; 175 ~> -1; 176 ~> -1; 177 ~> -1; 178 ~> -1; 179 ~> -1; 180 ~> -1; 181 ~> -1; 182 ~> -1; 183 ~> -1; 184 ~> -1; 185 ~> -1; 186 ~> -1; 187 ~> -1; 188 ~> -1; 189 ~> -1; 190 ~> -1; 191 ~> -1; 192 ~> -1; 193 ~> -1; 194 ~> -1; 195 ~> -1; 196 ~> -1; 197 ~> -1; 198 ~> -1; 199 ~> -1; 200 ~> -1; 201 ~> -1; 202 ~> -1; 203 ~> -1; 204 ~> -1; 205 ~> -1; 206 ~> -1; 207 ~> -1; 208 ~> -1; 209 ~> -1; 210 ~> -1; 211 ~> -1; 212 ~> -1; 213 ~> -1; 214 ~> -1; 215 ~> -1; 216 ~> -1; 217 ~> -1; 218 ~> -1; 219 ~> -1; 220 ~> -1; 221 ~> -1; 222 ~> -1; 223 ~> -1; 224 ~> -1; 225 ~> -1; 226 ~> -1; 227 ~> -1; 228 ~> -1; 229 ~> -1; 230 ~> -1; 231 ~> -1; 232 ~> -1; 233 ~> -1; 234 ~> -1; 235 ~> -1; 236 ~> -1; 237 ~> -1; 238 ~> -1; 239 ~> -1; 240 ~> -1; 241 ~> -1; 242 ~> -1; 243 ~> -1; 244 ~> -1; 245 ~> -1; 246 ~> -1; 247 ~> -1; 248 ~> -1; 249 ~> -1; 250 ~> -1; 251 ~> -1; 252 ~> -1; 253 ~> -1; 254 ~> -1; 255 ~> -1 ... 256 ... |]
3.1 ==> [| 0 ~> 1; 1 ~> 10; 2 ~> 100; 3 ~> 1000; 4 ~> 10000; 5 ~> 100000; 6 ~> 1000000; 7 ~> 10000000; 8 ~> 100000000; 9 ~> 1000000000; 10 ~> 10000000000; 11 ~> 100000000000; 12 ~> 1000000000000; 13 ~> 10000000000000; 14 ~> 100000000000000; 15 ~> 1000000000000000 ... 16 ... |]
---------- s1 = ----------
System.Array ==> CLASS []
System.Array+EmptyArray`1[System.Type] ==> CLASS [
	| Value ~> UNION[
		| !hasKey#1 & !hasKey#4 & !hasKey#5 ~> (HeapRef 1.2.1.1.1)
		| hasKey#1 | hasKey#6 | hasKey#7 ~> (HeapRef System.Array+EmptyArray`1[System.Type].Value)]]
System.Convert ==> CLASS [
	| ConvertTypes ~> UNION[
		| !hasKey#1 ~> (HeapRef 1.1)
		| hasKey#1 ~> (HeapRef System.Convert.ConvertTypes)]
	| DBNull ~> UNION[
		| !hasKey#1 & !hasKey#36 ~> (HeapRef 1.4.1)
		| !hasKey#1 & hasKey#37 ~> (HeapRef System.DBNull.Value)
		| hasKey#1 ~> (HeapRef System.Convert.DBNull)]
	| EnumType ~> UNION[
		| !hasKey#1 ~> System.Enum
		| hasKey#1 ~> (HeapRef System.Convert.EnumType)]
	| base64Table ~> UNION[
		| !hasKey#1 ~> (HeapRef 1.3)
		| hasKey#1 ~> (HeapRef System.Convert.base64Table)]
	| s_decodingMap ~> UNION[
		| !hasKey#1 ~> (HeapRef 1.5)
		| hasKey#1 ~> (HeapRef System.Convert.s_decodingMap)]]
System.DBNull ==> CLASS [
	| Value ~> UNION[
		| !hasKey#1 & !hasKey#3 ~> (HeapRef 1.4.1)
		| hasKey#1 | hasKey#2 ~> (HeapRef System.DBNull.Value)]]
System.Math ==> CLASS [
	| E ~> UNION[
		| !hasKey#38 ~> 2.718281828459045
		| hasKey#38 ~> System.Math.E]
	| PI ~> UNION[
		| !hasKey#38 ~> 3.141592653589793
		| hasKey#38 ~> System.Math.PI]
	| roundPower10Double ~> UNION[
		| !hasKey#38 ~> (HeapRef 3.1)
		| hasKey#38 ~> (HeapRef System.Math.roundPower10Double)]]
System.Object ==> CLASS []
System.Reflection.Missing ==> CLASS [
	| Value ~> UNION[
		| !hasKey#1 & !hasKey#8 & !hasKey#9 ~> (HeapRef 1.2.2.1)
		| hasKey#1 | hasKey#10 | hasKey#11 ~> (HeapRef System.Reflection.Missing.Value)]]
System.Runtime.CompilerServices.RuntimeHelpers ==> CLASS []
System.Type ==> CLASS [
	| Delimiter ~> UNION[
		| !hasKey#1 & !hasKey#35 ~> 46
		| hasKey#1 | hasKey#34 ~> System.Type.Delimiter]
	| EmptyTypes ~> UNION[
		| !hasKey#1 & !hasKey#23 & !hasKey#24 ~> (HeapRef 1.2.1.1.1)
		| !hasKey#1 & !hasKey#25 & hasKey#26 ~> (HeapRef System.Array+EmptyArray`1[System.Type].Value)
		| hasKey#1 | hasKey#27 ~> (HeapRef System.Type.EmptyTypes)]
	| FilterAttribute ~> UNION[
		| !hasKey#1 & !hasKey#17 ~> (HeapRef 1.2.3)
		| hasKey#1 | hasKey#16 ~> (HeapRef System.Type.FilterAttribute)]
	| FilterName ~> UNION[
		| !hasKey#1 & !hasKey#31 ~> (HeapRef 1.2.5)
		| hasKey#1 | hasKey#30 ~> (HeapRef System.Type.FilterName)]
	| FilterNameIgnoreCase ~> UNION[
		| !hasKey#1 & !hasKey#29 ~> (HeapRef 1.2.6)
		| hasKey#1 | hasKey#28 ~> (HeapRef System.Type.FilterNameIgnoreCase)]
	| Missing ~> UNION[
		| !hasKey#1 & !hasKey#18 & hasKey#19 ~> (HeapRef System.Reflection.Missing.Value)
		| !hasKey#1 & !hasKey#20 & !hasKey#21 ~> (HeapRef 1.2.2.1)
		| hasKey#1 | hasKey#22 ~> (HeapRef System.Type.Missing)]
	| s_defaultBinder ~> UNION[
		| !hasKey#1 & !hasKey#33 ~> null
		| hasKey#1 | hasKey#32 ~> (HeapRef System.Type.s_defaultBinder)]]
System.Type+<>c ==> CLASS [
	| <>9 ~> UNION[
		| !hasKey#1 & !hasKey#12 & !hasKey#13 ~> (HeapRef 1.2.4.1)
		| hasKey#1 | hasKey#14 | hasKey#15 ~> (HeapRef System.Type+<>c.<>9)]]
VSharp.Test.Tests.Arithmetics ==> CLASS []
